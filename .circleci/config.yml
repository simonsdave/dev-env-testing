---
version: 2.1

executors:
  dev-env:
    environment:
      DOCKER_TEMP_IMAGE=simonsdave/dev-env-testing:bindle
    docker:
      - image: simonsdave/xenial-dev-env:v0.5.22

jobs:
  build_test_and_deploy:
    working_directory: ~/repo
    executor: dev-env
    steps:
      - checkout
      - run: check-consistent-dev-env-version.sh --verbose
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install Python prerequisites
          command: pip install --requirement requirements.txt
      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Scan Repo for Passwords, Private Keys, etc.
          command: run-repo-security-scanner.sh
      - run:
          name: Run Pip Check
          command: run-pip-check.sh
      - run:
          name: Lint Python Files
          command: run-flake8.sh
      - run:
          name: Run Bandit
          command: run-bandit.sh
      - run:
          name: Lint Shell Scripts
          command: run-shellcheck.sh
      - run:
          name: Lint YAML Files
          command: run-yamllint.sh
      - run:
          name: Snyk Vulnerability Assessment
          command: run-snyk.sh "$SNYK_TOKEN"
      - run:
          name: Run Unit Tests
          command: run-unit-tests.sh
      - run:
          name: Build Python Packages
          command: build-python-package.sh
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            dockerfiles/build-docker-image.sh "$PWD/dist/dev_env_testing-$(python-version.sh).tar.gz" "$DOCKER_TEMP_IMAGE"
      - run:
          name: Test Docker Image
          command: echo 'should do some integration testing on the docker image just created'
      - deploy:
          name: Push Docker Image to Docker Hub
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              dockerfiles/tag-and-push-docker-image.sh "$DOCKER_TEMP_IMAGE" "latest" "$DOCKER_PASSWORD"
            fi
            if [[ "${CIRCLE_BRANCH}" =~ ^release-([0-9]+.)*[0-9]+$ ]]; then
              dockerfiles/tag-and-push-docker-image.sh "$DOCKER_TEMP_IMAGE" "v${CIRCLE_BRANCH##release-}" "$DOCKER_PASSWORD"
            fi

workflows:
  build_test_and_deploy:
    jobs:
      - build_test_and_deploy:
          context: dev-env-testing
